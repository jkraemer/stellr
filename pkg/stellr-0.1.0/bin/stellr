#!/usr/bin/ruby

require 'rubygems'
require 'optparse'
require 'daemons'
require 'fileutils'

begin
  gem 'stellr' 
rescue Gem::LoadError
  $:.unshift(File.dirname(__FILE__), "../lib")
end

require 'stellr'

include Stellr

commands = %w( start stop restart status )

options = OptionParser.new do |opts|
  
  opts.banner = "Usage: #{File.basename(__FILE__)} [options] #{commands.join('|')}"
  
  opts.on("-c", "--config CONFIG", "config file location") do |value|
    @config_file = value
  end
  
  opts.on("-h", "--help", "show this help") do
    @help = true
  end
end

cmdline = options.parse( ARGV )
command = cmdline.last

if @help or not commands.include?( command )
  puts options.to_s
else
  config   = Stellr::Config.new @config_file
  FileUtils.mkdir_p config.tmp_dir
  FileUtils.mkdir_p config.log_dir
  
  Daemons.run_proc( "stellr", :dir        => config.tmp_dir, 
                              :dir_mode   => :normal,
                              :log_output => true,
                              :ARGV       => [ command ] ) do
    Stellr::start_server config
  end

  if command == "start"
    sleep 2
    pid = Daemons::PidFile.new( config.tmp_dir, 'stellr' )
    if pid.exist? and Daemons::Pid.running?(pid.pid)
      exit 0
    else
      puts "not started. Watch #{config.tmp_dir}/stellr.output for errors."
      exit 1
    end  
  end

  # FIXME how to correctly shut down the running server so indexes are closed
  # and such?
  # look for some hook provided by daemon tools, or trap SIGKILL
end
